<html>
	<head>
	<link rel="stylesheet" type="text/css" href="/style.css">
	</head>
	<body><script language="javascript">
		if ((window.name != "content") && (navigator.userAgent.indexOf("Opera") <= -1) )
		document.write("<center><a href='../../index.html?page=LuaAPI/Classes/CSIsLib.htm'>show framing</a></center>")
		</script>
	<h1>
		CSIsLib	</h1>
<h3>Description</h3>
<p>Allows the UI to interact with Client Side Interaction minigames, such as patern matching and timed clicking.</p>
<a name=">Functions"/>
<hr><a name="CancelActiveCSI"><h3>Function</h3><br><h2>CancelActiveCSI()</h2>
<h3>Description</h3>
<p>Stops the current Client Side Interaction</p>
<hr><a name="CSIProcessInteraction"><h3>Function</h3><br><h2>CSIProcessInteraction(mouseDown)</h2>
<h3>Description</h3>
<p>Processes the user's input for the Client Side Interaction.  Different types of Client Side Interactions behave differently</p>
<h3>Params</h3>
<ul>
<li><b>mouseDown</b><b> (Boolean)</b> - Determines how to update the Client Side Interaction.<br>
For Yes/No Interactions:  true indicates that the user clicked yes, false indicates no<br>
For PressAndHold:  true indicates that the button was pressed down, false indicates that the button is up<br>
For RapidTapping: true indicates that the button was pressed down<br>

</ul>
<h3>Usage/Example</h3>
<pre>Functionality per CSI type:
Precision: 
Button Down: Informs the CSI of a button click.
Button Up: Nothing

Metronome: 
Button Down: Informs the CSI of a button click
ButtonUp: Nothing

Rapid Tap:
Button Down: Starts the CSI if it wasn't already running.  Informs the CSI of a button click.
Button Up: Nothing

Press and Hold: 
Button Down: Starts the CSI if it wasn't already running.  Tells the CSI that the button is being held.
Button Up: Tells the CSI that the button isn't being held.

Yes/No: 
ButtonDown: Treats the CSI as if the player clicked "Yes"
ButtonUp: Treats the CSI as if the player clicked "No"
</pre>
<hr><a name="GetActiveCSI"><h3>Function</h3><br><h2>GetActiveCSI()</h2>
<h3>Description</h3>
<p>Gets a table containing information on the active CSI.  Returns nil if there is no active CSI.</p>
<h3>Return Value</h3>
<ul>
<li><b>Table</b> - A table containing information on the current Client Side Interaction.  
<ul>
<li><b>eType</b><b> (CSIsLib.ClientSideInteractionType)</b> - The type of CSI that is active.
<li><b>strContext</b><b> (String)</b> - A string containing the text that should be displayed for the current CSI.
<li><b>nThreshold</b><b> (Integer)</b> - The number of misses allowed for this CSI before the user fails.  This variable only exists for Metronome CSIs.
</ul>
</ul>
<hr><a name="GetTimeRemainingForActiveCSI"><h3>Function</h3><br><h2>GetTimeRemainingForActiveCSI()</h2>
<h3>Description</h3>
<p>Gets the time remaining before the user fails the current CSI.</p>
<h3>Return Value</h3>
<ul>
<li><b>Float</b> - The time remaining before the user fails, in seconds
</ul>
<hr><a name="IsCSIRunning"><h3>Function</h3><br><h2>IsCSIRunning()</h2>
<h3>Description</h3>
<p>Determines if the active CSI has been started.</p>
<h3>Return Value</h3>
<ul>
<li><b>Boolean</b> - Whether the active CSI is running or not.
</ul>
<hr><a name="SelectCSIOption"><h3>Function</h3><br><h2>SelectCSIOption(option)</h2>
<h3>Description</h3>
<p>Enters the user's input for the current Client Side Interaction.  This includes final keypad entries for the Keypad interactions and the Id of the buttons pressed in Memory interactions</p>
<h3>Params</h3>
<ul>
<li><b>option</b><b> (Integer)</b> - The number that was input for the Client Side Interaction.  This includes the number for keypad entries and the Id number for Memory selections
</ul>
<hr><a name="StartActiveCSI"><h3>Function</h3><br><h2>StartActiveCSI()</h2>
<h3>Description</h3>
<p>Starts the currently active CSI.</p>
	</body>
</html>
