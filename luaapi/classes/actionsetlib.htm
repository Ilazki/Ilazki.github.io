<html>
	<head>
	<link rel="stylesheet" type="text/css" href="/style.css">
	</head>
	<body><script language="javascript">
		if ((window.name != "content") && (navigator.userAgent.indexOf("Opera") <= -1) )
		document.write("<center><a href='../../index.html?page=LuaAPI/Classes/ActionSetLib.htm'>show framing</a></center>")
		</script>
	<h1>
		ActionSetLib	</h1>
<h3>Description</h3>
<p>This library contains functions for validating and saving the player's Limited Action Set.</p>
<a name="Enums"/><hr><a name="CodeEnumLimitedActionSetResult"><h3>Enum</h3><br><h2>CodeEnumLimitedActionSetResult</h2>
<h3>Description</h3>
<p>The possible results that the UI can receive when trying to save an Action Set or AMP loadout.</p>
<ul>
<li><b>Ok</b>
<li><b>SlotUnlockPrereqFalse</b>
<li><b>UnknownSpellId</b>
<li><b>UnknownClassId</b>
<li><b>UnknownSpellActionSetCategoryGroupPlacement</b>
<li><b>UnknownSlotActionSetCategoryGroupAllowed</b>
<li><b>InvalidSpellActionSetCategoryGroupPlacement</b>
<li><b>InvalidSlotActionSetCategoryGroupAllowed</b>
<li><b>SlotSpellAnyMatchFail</b>
<li><b>SlotSpellAllMatchFail</b>
<li><b>SlotSpellNoneMatchFail</b>
<li><b>UnknownSpellActionSetGroupMatchType</b>
<li><b>DuplicateSpell</b>
<li><b>SpellActionSetPrereqFalse</b>
<li><b>SpellDependencyAnyMatchFail</b>
<li><b>SpellDependencyAllMatchFail</b>
<li><b>SpellDependencyNoneMatchFail</b>
<li><b>BadSpellInActionSet</b>
<li><b>ActionSetRequirementAnyMatchFail</b>
<li><b>ActionSetRequirementAllMatchFail</b>
<li><b>ActionSetRequirementNoneMatchFail</b>
<li><b>InvalidActionSetSize</b>
<li><b>InvalidUnit</b>
<li><b>InvalidSlot</b>
<li><b>InvalidActionSetTable</b>
<li><b>SpellDependencyMaxMatchFail</b>
<li><b>RestrictedInPVP</b>
<li><b>PlayerIsDead</b>
<li><b>MissingTag</b>
<li><b>InCombat</b>
<li><b>EldanAugmentation_NotEnoughPower</b>
<li><b>EldanAugmentation_LockedInlaid</b>
<li><b>EldanAugmentation_LockedCategoryTier</b>
<li><b>EldanAugmentation_InvalidSeries</b>
<li><b>EldanAugmentation_InvalidId</b>
<li><b>EldanAugmentation_InvalidCategoryId</b>
<li><b>EldanAugmentation_InvalidCategoryTier</b>
<li><b>UpdateSpellInProgress</b>
<li><b>InVoid</b>
<li><b>InvalidSpecIndex</b>
<li><b>InvalidSpellTier</b>
<li><b>InsufficientAbilityPoints</b>
<li><b>EldanAugmentation_VersionMismatch</b>
<li><b>EldanAugmentation_SpecNotFound</b>
<li><b>LASChangeSpellFailed</b>
<li><b>SpecUnlockPrereqFalse</b>
</ul>
<hr><a name="CodeEnumShortcutSet"><h3>Enum</h3><br><h2>CodeEnumShortcutSet</h2>
<h3>Description</h3>
<p>These values represent what each Action Bar Shortcut is used for.</p>
<ul>
<li><b>VehicleBar</b>
<li><b>PrimaryPetBar</b>
<li><b>PetMiniBar0</b>
<li><b>PetMiniBar1</b>
<li><b>PetMiniBar2</b>
<li><b>PetMiniBar3</b>
<li><b>PetMiniBar4</b>
<li><b>FloatingSpellBar</b>
<li><b>FloatingDynamicSpellBar</b>
<li><b>Count</b>
</ul>
<a name=">Functions"/>
<hr><a name="DoesActionSetMeetRequirements"><h3>Function</h3><br><h2>DoesActionSetMeetRequirements() (Deprecated)</h2>
<h3>Return Value</h3>
<ul>
<li><b>ActionSetLib.CodeEnumLimitedActionSetResult</b> - Either the reason that the Action Set is invalid, or OK if it is valid.
</ul>
<hr><a name="GetCurrentActionSet"><h3>Function</h3><br><h2>GetCurrentActionSet()</h2>
<h3>Description</h3>
<p>Gets a list of the spell ids used in the player's current action set.</p>
<h3>Return Value</h3>
<ul>
<li><b>Array of Integer</b> - A list of spell ids for the player's current action set.  If a slot has no spell assigned to it, the id is 0.
</ul>
<hr><a name="IsSlotUnlocked"><h3>Function</h3><br><h2>IsSlotUnlocked(nSlotIdx)</h2>
<h3>Description</h3>
<p>Determines if the specified slot is unlocked for the player.</p>
<h3>Params</h3>
<ul>
<li><b>nSlotIdx</b><b> (Integer)</b> - The slot number that the function should check.
</ul>
<h3>Return Value</h3>
<ul>
<li><b>ActionSetLib.CodeEnumLimitedActionSetResult</b> - This value will be Ok if the slot is unlocked or SlotUnlockPrereqFalse if it is locked.
</ul>
<hr><a name="IsSpellCompatibleWithActionSet"><h3>Function</h3><br><h2>IsSpellCompatibleWithActionSet(idSpell, arActionSet) (Deprecated)</h2>
<h3>Description</h3>
<p>Checks to make sure that a spell is compatible with an action set.  </p>
<h3>Params</h3>
<ul>
<li><b>idSpell</b><b> (Integer)</b> - The id number of the spell that the UI wants to place in the action set.
<li><b>arActionSet</b><b> (Array of Integer)</b> - An array of spell ids in the current action set.  The array's index lines up with the slot with the same number.
</ul>
<h3>Return Value</h3>
<ul>
<li><b>ActionSetLib.CodeEnumLimitedActionSetResult</b> - The result of the check.  If the spell is valid in the action set, the return value will be Ok.  Otherwise, this value will contain the error that would prevent the spell from being added to the action set.
</ul>
<h3>Usage/Example</h3>
<pre>-- Attempting to add the Stalker's "Stagger" ability to the current action set

local eCanAddToSpec = ActionSetLib.IsSpellCompatibleWithActionSet(23173, ActionSetLib.GetCurrentActionSet())

if eCanAddToSpec == ActionSetLib.CodeEnumLimitedActionSetResult.Ok then
    Print("Stagger can be added to the current action set")
else
    Print("Stagger can not be added to the current action set.  Error: " .. eCanAddToSpec)
end</pre>
<hr><a name="IsSpellCompatibleWithSlot"><h3>Function</h3><br><h2>IsSpellCompatibleWithSlot(idSpell, nSlotIdx) (Deprecated)</h2>
<h3>Description</h3>
<p>Checks to make sure that a spell is compatible with the specified slot in the action bar.</p>
<h3>Params</h3>
<ul>
<li><b>idSpell</b><b> (Integer)</b> - The id number for the spell that the function is validating against the action bar slot.
<li><b>nSlotIdx</b><b> (Integer)</b> - The action bar slot that the function is checking the spell against.
</ul>
<h3>Return Value</h3>
<ul>
<li><b>ActionSetLib.CodeEnumLimitedActionSetResult</b> - The result of the validation.  If the spell can be added to the slot, this value is Ok.  Otherwise, it contains the error that explains why the spell could not be added to the slot.
</ul>
<h3>Remarks</h3>
<p>This function does not account for other spells in the current action set.  Because of this, it may return a result of Ok when passing in the id of a spell that the player already has on their action bar even though having multiple copies of the same spell on the action bar is not valid.</p>
<hr><a name="RequestActionSetChanges"><h3>Function</h3><br><h2>RequestActionSetChanges(arActionSet)</h2>
<h3>Description</h3>
<p>Attempts to make changes to the current action set.</p>
<h3>Params</h3>
<ul>
<li><b>arActionSet</b><b> (Array of Integer)</b> - An array of spell ids that represent the proposed action set.  The array's index lines up with the slot number in the action bar.
</ul>
<h3>Return Value</h3>
<ul>
<li><b>Table</b> - A table that contains the result and other data that is relevant to the result.
<ul>
<li><b>eResult</b><b> (ActionSetLib.CodeEnumLimitedActionSetResult)</b> - The result of the UI's attempt to change the action set.  If the change was successful, this value will be Ok.  Otherwise, it will list the error that prevented it from being set.
<li><b>tTags</b><b> (Array of strTag)</b> - An array that contains the name of every spell category that was required but was not found in the action set.  This table is only relevant if eResult is MissingTag.
</ul>
</ul>
<h3>Remarks</h3>
<p>If the result is Ok, then the server will fire the AbilityBookChange and CharacterEldanAugmentationUpdated events.</p>
	</body>
</html>
